sap.ui.define([
	"jquery.sap.global",
	'sap/m/MessageBox',
	"sap/ui/core/mvc/Controller",
	'sap/ui/core/util/Export',
	'sap/ui/core/util/ExportTypeCSV',
	"sap/ui/core/routing/History",
	"sap/m/MessageToast"
], function(jQuery, MessageBox, Controller, Export, ExportTypeCSV, History, MessageToast) {
	"use strict";
	var Objnr_Edit;
	var Ernam_Edit;
	var Erdat_Edit;
	var Chnam_Edit;
	var Chdat_Edit;
	var aIndex_Delete;
	var sMsg;
	var oCancelTable;
	var aIndex;
	return Controller.extend("ZNav.controller.V_Trans", {
		/**
		 * Called when a controller is instantiated and its View controls (if available) are already created.
		 * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.
		 * @memberOf ZNav.view.V_Trans
		 */
		onInit: function() {

			// this.oTable = this.getView().byId("Trans_Table");
			// this.oModel = this.oTable.getModel();
			// var dialog = new sap.m.BusyDialog({
			// text: 'Loading Data'
			// });
			// dialog.open();
			
			// this.rebindTable();
			// dialog.close();
			
			var oView = this.getView();
			var oTable = oView.byId("Trans_Table");
			oView.addEventDelegate({
				onBeforeShow: function(oEvent) {
								oTable.bindRows({
									path: "/TransTrackerSet",
									key: ["Objnr"]
						});

				}

			}, oView);	
			
		        var oModel = new sap.ui.model.json.JSONModel();
                oModel.loadData("model/Data.json","",false);
                this.getView().setModel(oModel, "jData");

			
		},

		rebindTable: function() {
			// var dialog = new sap.m.BusyDialog({
			// 	text: 'Loading Data'
			// });
			// dialog.open();
			var oTable = this.getView().byId("Trans_Table");
			oTable.bindRows({
				path: "/TransTrackerSet",
				key: ["Objnr"]
			});
			// dialog.close();
		},
		/**
		 * Similar to onAfterRen	dering, but this hook is invoked before the controller's View is re-rendered
		 * (NOT before the first rendering! onInit() is used for that one!).
		 * @memberOf ZNav.view.V_Trans
		 */
		onBeforeRendering: function() {
			// this.oTable = this.getView().byId("Trans_Table");
			// this.oModel = this.oTable.getModel();
			// this.rebindTable();
			// this.oModel = this.getView().getModel();
			// var dialog = new sap.m.BusyDialog({
			// 	text: 'Loading Data'
			// });
			// this.oModel.attachRequestSent(function() {
			// 	dialog.open();
			// });
			// this.oModel.attachRequestCompleted(function() {
			// 	dialog.close();
			// });
			// this.oModel.attachRequestFailed(function() {
			// 	dialog.close();
			// });
		},
		/**
		 * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.
		 * This hook is the same one that SAPUI5 controls get after being rendered.
		 * @memberOf ZNav.view.V_Trans
		 */
		onAfterRendering: function() {
			// this.oModel = this.getView().getModel();
			// var dialog = new sap.m.BusyDialog({
			// 	text: 'Loading Data'
			// });
			// this.oModel.attachRequestSent(function() {
			// 	dialog.open();
			// });
			// this.oModel.attachRequestCompleted(function() {
			// 	dialog.close();
			// });
			// this.oModel.attachRequestFailed(function() {
			// 	dialog.close();
			// });
		},
		/**
		 * Called when the Controller is destroyed. Use this one to free resources and finalize activities.
		 * @memberOf ZNav.view.V_Trans
		 */
		onExit: function() {

		},
		/**
		 *@memberOf ZNav.controller.V_Trans
		 */
		fGoToTarget_1: function(Evt) {
			//This code was generated by the layout editor.
			var oHistory = History.getInstance();
			var sPreviousHash = oHistory.getPreviousHash();
			// Go one screen back if you find a Hash
			if (sPreviousHash !== undefined) {
				window.history.go(-1);
			} // If you do not find a correct Hash, go to the Source screen using default router;
			else {
				var oRouter = sap.ui.core.UIComponent.getRouterFor(this);
				oRouter.navTo("", true);
			}
		},
		
		fChangeTrans: function() {
			var oView = this.getView();
			var oTable = oView.byId("Trans_Table");
			var aIndex = oTable.getSelectedIndex();
			var oDialog = oView.byId("idTransDialogChange");
			// create dialog lazily
			if (!oDialog) {
				// create dialog via fragment factory
				oDialog = sap.ui.xmlfragment(oView.getId(), "ZNav.view.TransChange", this);
				// connect dialog to view (models, lifecycle)
				oView.addDependent(oDialog);
			}
			
			oDialog.open();
			var oContext = oTable.getContextByIndex(aIndex);
			Objnr_Edit = oContext.getProperty("Objnr");
			var sTranList = oContext.getProperty("TranList");
			 var sTeam =  oContext.getProperty("Team");
			// var oTeam = this.getView().byId("vTeam").getSelectedItem();
   //         var oKeyteam = oTeam.getKey();
			// var sTeam = oKeyteam;
			 var sProject = oContext.getProperty("Project");
			
			// var oZprojId1 = this.getView().byId("vchangeProjectId").getValue;
   //         var oKey = oZprojId1.getKey();
   //         var sProject = oKey;
			var sTicket = oContext.getProperty("Ticket");
			var sFolder = oContext.getProperty("Folder");
			var sSeqnr = oContext.getProperty("Seqnr");
			var sLand1 = oContext.getProperty("Land1");
			var sTrkorr = oContext.getProperty("Trkorr");
			var sTrkorrPrev = oContext.getProperty("TrkorrPrev");
		    var sDevtype = oContext.getProperty("Devtype");
	  //  	var oDev = this.getView().byId("vdev").getSelectedItem();
   //         var oKeydev = oDev.getKey();
			// var sDevtype = oKeydev;
			var sAs4user = oContext.getProperty("As4user");
			var sComments = oContext.getProperty("Comments");
			// var sDelflg = oContext.getProperty("Delflg");
			// Ernam_Edit = oContext.getProperty("Ernam");
			// Erdat_Edit = oContext.getProperty("Erdat");
			// Chnam_Edit = oContext.getProperty("Chnam");
			// Chdat_Edit = oContext.getProperty("Chdat");
			
			oView.byId("inTranList").setValue(sTranList);
			oView.byId("vTeam").setValue(sTeam );
			oView.byId("vchangeProjectId").setValue(sProject);
			oView.byId("inTicket").setValue(sTicket);
			oView.byId("inFolder").setValue(sFolder);
			oView.byId("inSeqnr").setValue(sSeqnr);
			oView.byId("inLand1").setValue(sLand1);
			oView.byId("inTrkorr").setValue(sTrkorr);
			oView.byId("inTrkorrPrev").setValue(sTrkorrPrev);
		    oView.byId("vdev").setValue(sDevtype);
			oView.byId("inAs4user").setValue(sAs4user);
			oView.byId("inComments").setValue(sComments);
			// oView.byId("inDelflg").setValue(sDelflg);
			// oView.byId("inErnam").setValue(sErnam);
			// oView.byId("inErdat").setValue(sErdat);
			// oView.byId("inChnam").setValue(sChnam);
			// oView.byId("inChdat").setValue(sChdat);
		},
		
		onTransDialogChange : function () {
			this.getView().byId("idTransDialogChange").close();
			// this.rebindTable();
		},		
		
		fCopyTrans: function() {
			var oView = this.getView();
			var oTable = oView.byId("Trans_Table");
		    aIndex = oTable.getSelectedIndex();
			var oDialog = oView.byId("idTransDialogCopy");
			// create dialog lazily
			if (!oDialog) {
				// create dialog via fragment factory
				oDialog = sap.ui.xmlfragment(oView.getId(), "ZNav.view.TransCopy", this);
				// connect dialog to view (models, lifecycle)
				oView.addDependent(oDialog);
			}
			
			oDialog.open();
			var oContext = oTable.getContextByIndex(aIndex);
			// var sTranList = oContext.getProperty("TranList");
			var sTranList = oContext.getProperty("TranList");
			var sTeam =  oContext.getProperty("Team");
			var sProject = oContext.getProperty("Project");
			var sTicket = oContext.getProperty("Ticket");
			var sFolder = oContext.getProperty("Folder");
			var sSeqnr = oContext.getProperty("Seqnr");
			var sLand1 = oContext.getProperty("Land1");
			var sTrkorr = oContext.getProperty("Trkorr");
			var sTrkorrPrev = oContext.getProperty("TrkorrPrev");
			var sDevtype = oContext.getProperty("Devtype");
			var sAs4user = oContext.getProperty("As4user");
			var sComments = oContext.getProperty("Comments");
			// var sDelflg = oContext.getProperty("Delflg");
			// Ernam_Edit = oContext.getProperty("Ernam");
			// Erdat_Edit = oContext.getProperty("Erdat");
			// Chnam_Edit = oContext.getProperty("Chnam");
			// Chdat_Edit = oContext.getProperty("Chdat");
			
			oView.byId("cpTranList").setValue(sTranList);
			oView.byId("cpTeam").setValue(sTeam);
			oView.byId("cpProject").setValue(sProject);
			oView.byId("cpTicket").setValue(sTicket);
			oView.byId("cpFolder").setValue(sFolder);
			oView.byId("cpSeqnr").setValue(sSeqnr);
			oView.byId("cpLand1").setValue(sLand1);
			oView.byId("cpTrkorr").setValue(sTrkorr);
			oView.byId("cpTrkorrPrev").setValue(sTrkorrPrev);
			oView.byId("cpDevtype").setValue(sDevtype);
			oView.byId("cpAs4user").setValue(sAs4user);
			oView.byId("cpComments").setValue(sComments);
			// oView.byId("inDelflg").setValue(sDelflg);
			// oView.byId("inErnam").setValue(sErnam);
			// oView.byId("inErdat").setValue(sErdat);
			// oView.byId("inChnam").setValue(sChnam);
			// oView.byId("inChdat").setValue(sChdat);
		},		
		
		onTransDialogCopy : function () {
			this.getView().byId("idTransDialogCopy").close();
			// this.rebindTable();
		},
		
		fDeleteTrans: function() {
            var oView = this.getView();
            var oTable = oView.byId("Trans_Table");
			aIndex_Delete = oTable.getSelectedIndex();
			var oDialog = oView.byId("idTransDialogDelete");
			// create dialog lazily
			if (!oDialog) {
				// create dialog via fragment factory
				oDialog = sap.ui.xmlfragment(oView.getId(), "ZNav.view.TransDelete", this);
				// connect dialog to view (models, lifecycle)
				oView.addDependent(oDialog);
			}
			oDialog.open();
		},	
		
		onTransDialogDelete : function () {
			this.getView().byId("idTransDialogDelete").close();
			// this.rebindTable();
		},		
		
		fSaveChangeTrans: function() {
			var oView = this.getView();
			var oTable = oView.byId("Trans_Table");
			var aIndex = oTable.getSelectedIndex();
			var contexts = oTable.getContextByIndex(aIndex);
			var set = contexts.sPath;
			/*Update operation*/
			var oModel = this.getView().getModel();
			var oEntry = {};
			
			oEntry.Objnr = Objnr_Edit;
			oEntry.TranList = oView.byId("inTranList").getValue();
			oEntry.Team = oView.byId("vTeam").getValue();
			oEntry.Project = oView.byId("vchangeProjectId").getValue();
			oEntry.Ticket = oView.byId("inTicket").getValue();
			oEntry.Folder = oView.byId("inFolder").getValue();
			oEntry.Seqnr = oView.byId("inSeqnr").getValue();
			oEntry.Land1 = oView.byId("inLand1").getValue();
			oEntry.Trkorr = oView.byId("inTrkorr").getValue();
			oEntry.TrkorrPrev = oView.byId("inTrkorrPrev").getValue();
			oEntry.Devtype = oView.byId("vdev").getValue();
			oEntry.As4user = oView.byId("inAs4user").getValue();
			oEntry.Comments = oView.byId("inComments").getValue();
			// oEntry.Delflg = oView.byId("inDelflg").getValue();
			oEntry.Ernam = Ernam_Edit;
			oEntry.Erdat = Erdat_Edit;
			oEntry.Chnam = Chnam_Edit;
			oEntry.Chdat = Chdat_Edit;
			
			oModel.update(set, oEntry, {
				method: "PUT",
				success: function(data) {
					MessageToast.show("Record has been updated");
				},
				error: function(e) {
					MessageToast.show("Error in save");
				}
			});
			this.getView().byId("idTransDialogChange").close();
			// this.rebindTable();

		},
		
		fSaveCopyTrans: function() {
			var oView = this.getView();
			var oTable = oView.byId("Trans_Table");
			var aIndex = oTable.getSelectedIndex();
			// var contexts = oTable.getContextByIndex(aIndex);
			// var set = contexts.sPath;
			/*Create operation*/
			var oModel = this.getView().getModel();
			var oEntry = {};
			
			oEntry.Objnr = "9999999999";
			oEntry.TranList = oView.byId("cpTranList").getValue();
			oEntry.Team = oView.byId("cpTeam").getValue();
			oEntry.Project = oView.byId("cpProject").getValue();
			oEntry.Ticket = oView.byId("cpTicket").getValue();
			oEntry.Folder = oView.byId("cpFolder").getValue();
			oEntry.Seqnr = oView.byId("cpSeqnr").getValue();
			oEntry.Land1 = oView.byId("cpLand1").getValue();
			oEntry.Trkorr = oView.byId("cpTrkorr").getValue();
			oEntry.TrkorrPrev = oView.byId("cpTrkorrPrev").getValue();
			oEntry.Devtype = oView.byId("cpDevtype").getValue();
			oEntry.As4user = oView.byId("cpAs4user").getValue();
			oEntry.Comments = oView.byId("cpComments").getValue();
			// oEntry.Delflg = oView.byId("inDelflg").getValue();
			// oEntry.Ernam = Ernam_Edit;
			// oEntry.Erdat = Erdat_Edit;
			// oEntry.Chnam = Chnam_Edit;
			// oEntry.Chdat = Chdat_Edit;
			
			oModel.create("/TransTrackerSet", oEntry, {
				method: "POST",
				success: function(data) {
					MessageToast.show("Record has been Created");
				},
				error: function(e) {
					MessageToast.show("Error in save");
				}
			});
			this.getView().byId("idTransDialogCopy").close();
			// this.rebindTable();

		},		
		
		fSaveDeleteTrans: function() {
			var oView = this.getView();
			var oTable = oView.byId("Trans_Table");
			var contexts = oTable.getContextByIndex(aIndex_Delete);
			var set = contexts.sPath;
			/*Delete operation*/
			var oModel = this.getView().getModel();
			
			oModel.remove(set, {
					method: "DELETE",
					success: function(data) {
						MessageToast.show("Record has been deleted");
					},
					error: function(e) {
						MessageToast.show("Error while deleting the record");
					}
				});
				this.getView().byId("idTransDialogDelete").close();
				// this.rebindTable();
			
		},
		
		/**
		 *@memberOf ZNav.controller.V_Trans
		 */
		fCreate_Trans: function() {
			//This code was generated by the layout editor.
			//This code was generated by the layout editor.
			var oRouter = sap.ui.core.UIComponent.getRouterFor(this);
			// Tell the Router to Navigate To Route_Tar_1
			oRouter.navTo("Route_Trans_Create", {});
		},
		
		fChange_Trans: function() {
			//This code was generated by the layout editor.
			var dialog = new sap.m.BusyDialog({ text:'Please wait...'});
			dialog.open();
			var oTable = this.getView().byId("Trans_Table");
			var oModel = oTable.getModel();
			// this.aTransTrackerSet = jQuery.extend(true, [], oModel.getProperty("/TransTrackerSet"));
			aIndex = oTable.getSelectedIndex();

			if (aIndex < 0) {
				dialog.close();
				MessageToast.show("Please select one record");
			} else {
				this.getView().byId("idCopy").setVisible(false);
				this.getView().byId("idChange").setVisible(false);
				this.getView().byId("idDownload").setVisible(false);
				this.getView().byId("idDelete").setVisible(false);
				this.getView().byId("idSave").setVisible(true);
				this.getView().byId("idCancel").setVisible(true);
				sMsg = oTable.getContextByIndex(aIndex);
				// alert(sMsg);
				var selectedRow = oTable.getRows()[aIndex];
				for (var i = 0; i < 14; i++) {
					selectedRow.getCells()[i].setProperty("editable", true);
				}
				dialog.close();
			}
		},
		fCancelFromTrans: function() {
			var dialog = new sap.m.BusyDialog({ text:'Please wait'});
			dialog.open();
			// var oPage = this.getView().byId("trans_page");
			// oPage.setShowFooter(false);

			this.getView().byId("idCopy").setVisible(true);
			this.getView().byId("idChange").setVisible(true);
			this.getView().byId("idDownload").setVisible(true);
			this.getView().byId("idDelete").setVisible(true);
			this.getView().byId("idSave").setVisible(false);
			this.getView().byId("idCancel").setVisible(false);
			// var oModel = this.getView().getModel();
			// oModel.resetChanges(["/TransTrackerSet('1')"]);
			// var oTable = this.getView().byId("Trans_Table");
			// var oModel = oTable.getModel();
			// var aIndex = oTable.getSelectedIndex();
			var selectedRow = this.oTable.getRows()[aIndex];
			for (var i = 0; i < 14; i++) {
				selectedRow.getCells()[i].setProperty("editable", false);
			}
			// oModel.setProperty("/TransTrackerSet", this.aTransTrackerSet);
			this.rebindTable();
			dialog.close();

			//oCancelTable.getBinding().refresh(true);

			//sap.ui.getCore().byId("Trans_Table").getModel().refresh(true);

			// var oRouter = sap.ui.core.UIComponent.getRouterFor(this);
			// // Tell the Router to Navigate To Route_Tar_1
			// oRouter.navTo("Route_Tar_3", {});
		},
		fDeleteFromTrans: function() {
		var dialog = new sap.m.BusyDialog({ text:'Deleting Record'});
		dialog.open();
			/*delete operation*/
			var oModel = this.getView().getModel();
			var oTable = this.getView().byId("Trans_Table");
			var aIndex = oTable.getSelectedIndex();
			if (aIndex < 0) {
				dialog.close();
				MessageToast.show("Please select one record");
			} else {
				var contexts = oTable.getContextByIndex(aIndex);
				var set = contexts.sPath;
				oModel.remove(set, {
					method: "DELETE",
					success: function(data) {
						dialog.close();
						MessageToast.show("Record has been deleted");
					},
					error: function(e) {
						dialog.close();
						MessageToast.show("Error while deleting the record");
					}
				});
			}
		},
		fCopy_Trans: function(oEvent) {
			
			// var oModel = this.getView().getModel();
			// var path = oEvent.getSource().getBindingContext("oModel").getPath();
			// var row= path.substring(path.lastIndexOf('/') +1);
  //var path = evt.getSource().getParent().getBindingContextPath();
			var oTable = this.getView().byId("Trans_Table");
			var aIndex = oTable.getSelectedIndex();
			if (aIndex < 0) {
				MessageToast.show("Please select one record");
			} else {
				var rows = oTable.getRows();
				var selectedRow = oTable.getRows()[aIndex];
				var path = selectedRow.getBindingContext().getPath();
				var obj = oTable.getModel().getProperty(path);
				if (obj.Team == "") {
					obj.Team = " ";
				}
				if (obj.Project == "") {
					obj.Project = " ";
				}
				if (obj.Ticket == "") {
					obj.Ticket = " ";
				}
				if (obj.Folder == "") {
					obj.Folder = " ";
				}
				if (obj.Seqnr == "") {
					obj.Seqnr = " ";
				}
				if (obj.Land1 == "") {
					obj.Land1 = " ";
				}
				if (obj.Trkorr == "") {
					obj.Trkorr = " ";
				}
				if (obj.TrkorrPrev == "") {
					obj.TrkorrPrev = " ";
				}
				if (obj.Devtype == "") {
					obj.Devtype = " ";
				}
				if (obj.As4user == "") {
					obj.As4user = " ";
				}
				var oRouter = sap.ui.core.UIComponent.getRouterFor(this);
				// Tell the Router to Navigate To Route_Tar_1
				oRouter.navTo("Route_Trans_Copy", {
					Team: obj.Team,
					Project: obj.Project,
					Ticket: obj.Ticket,
					SpecName: obj.Folder,
					Seqnr: obj.Seqnr,
					Country: obj.Land1,
					Trkorr: obj.Trkorr,
					TrkorrPrev: obj.TrkorrPrev,
					Devtype: obj.Devtype,
					// Devtype: " ",
					Owner: obj.As4user
				});
			}
		},
		fTransDownload: sap.m.Table.prototype.exportData || function(oEvent) {
			var oExport = new Export({
				exportType: new ExportTypeCSV({
					separatorChar: ",",
					charSet: "utf-8"
				}),
				models: this.getView().getModel(),
				rows: {
					path: "/TransTrackerSet"
				},
				columns: [{
					name: "Tran List",
					template: {
						content: "{TranList}"
					}
				}, {
					name: "Team",
					template: {
						content: "{Team}"
					}
				}, {
					name: "Project Id",
					template: {
						content: "{Project}"
					}
				}, {
					name: "Ticket Number",
					template: {
						content: "{Ticket}"
					}
				}, {
					name: "Spec. Name",
					template: {
						content: "{Folder}"
					}
				}, {
					name: "Sequence Number",
					template: {
						content: "{Seqnr}"
					}
				}, {
					name: "Country",
					template: {
						content: "{Land1}"
					}
				}, {
					name: "Transport Request",
					template: {
						content: "{Trkorr}"
					}
				}, {
					name: "Previous Request",
					template: {
						content: "{TrkorrPrev}"
					}
				}, {
					name: "Dev. Type",
					template: {
						content: "{Devtype}"
					}
				}, {
					name: "Owner",
					template: {
						content: "{As4user}"
					}
				}, {
					name: "Comments",
					template: {
						content: "{Comments}"
					}
				}, {
					name: "Deletion indicator",
					template: {
						content: "{Delflg}"
					}
				}, {
					name: "Created By",
					template: {
						content: "{Ernam}"
					}
					// }, {
					// 	name: "Assigned By",
					// 	template: {
					// 		content: "{ZassignedBy}"
					// 	}
					// }, {
					// 	name: "Onsite Owner Name",
					// 	template: {
					// 		content: "{OwnerNmOnsite}"
					// 	}
					// }, {
					// 	name: "Offshore Owner Name",
					// 	template: {
					// 		content: "{OwnerNmOffshe}"
					// 	}
					// }, {
					// 	name: "Assign Date",
					// 	template: {
					// 		content: "{ZassignDate}"
					// 	}
					// }, {
					// 	name: "Plan Start Date",
					// 	template: {
					// 		content: "{ZplanStart}"
					// 	}
					// }, {
					// 	name: "Plan End Date",
					// 	template: {
					// 		content: "{ZplanEnd}"
					// 	}
					// }, {
					// 	name: "Real Start Date",
					// 	template: {
					// 		content: "{ZrealStart}"
					// 	}
					// }, {
					// 	name: "Real End Date",
					// 	template: {
					// 		content: "{ZrealEnd}"
					// 	}
					// }, {
					// 	name: "Close Date",
					// 	template: {
					// 		content: "{ZcloseDate}"
					// 	}
					// }, {
					// 	name: "Developer",
					// 	template: {
					// 		content: "{Zdeveloper}"
					// 	}
				}]
			});
			// // download exported file
			oExport.saveFile().catch(function(oError) {
				MessageBox.error("Error when downloading data. Browser might not be supported!\n\n" + oError);
			}).then(function() {
				oExport.destroy();
			});
		},
		// getTable : function(){
		// 	return this.getView().byId("Trans_Table");
		// },
		/**
		 *@memberOf ZNav.controller.V_Trans
		 */
		// fSaveChangeTrans: function() {
		// 	var dialog = new sap.m.BusyDialog({ text:'Saving Record'});
		// 	dialog.open();
		// 	var oTable = this.getView().byId("Trans_Table");
		// 	// var aIndex = oTable.getSelectedIndex();
		// 	var selectedRow = oTable.getRows()[aIndex];
		// 	var path = selectedRow.getBindingContext().getPath();
		// 	var obj = oTable.getModel().getProperty(path);

		// 	var contexts = oTable.getContextByIndex(aIndex);
		// 	aIndex = "";
		// 	var set = contexts.sPath;

		// 	/*create operation*/
		// 	var oModel = this.getView().getModel();
		// 	var oEntry = {};
		// 	oEntry.Objnr = obj.Objnr;
		// 	oEntry.TranList = selectedRow.getCells()[0].getProperty("value");
		// 	oEntry.Team = selectedRow.getCells()[1].getProperty("value");
		// 	oEntry.Project = selectedRow.getCells()[2].getProperty("value");
		// 	oEntry.Ticket = selectedRow.getCells()[3].getProperty("value");
		// 	oEntry.Folder = selectedRow.getCells()[4].getProperty("value");
		// 	oEntry.Seqnr = selectedRow.getCells()[5].getProperty("value");
		// 	oEntry.Land1 = selectedRow.getCells()[6].getProperty("value");
		// 	oEntry.Trkorr = selectedRow.getCells()[7].getProperty("value");
		// 	oEntry.TrkorrPrev = selectedRow.getCells()[8].getProperty("value");
		// 	oEntry.Devtype = selectedRow.getCells()[9].getProperty("value");
		// 	oEntry.As4user = selectedRow.getCells()[10].getProperty("value");
		// 	oEntry.Comments = selectedRow.getCells()[11].getProperty("value");
		// 	// oEntry.Delflg = selectedRow.getCells()[13].getProperty("value");
		// 	oEntry.Ernam = selectedRow.getCells()[13].getProperty("value");
		// 	// oEntry.Erdat = "2017-08-25T00:00:00";
		// 	// oEntry.Ertim = "PT10H10M10S";
		// 	// oEntry.Chnam = "V2746337";
		// 	// oEntry.Chdat = "2017-09-25T00:00:00";
		// 	// oEntry.Chtim = "PT10H10M10S";
		// 	oModel.update(set, oEntry, {
		// 		method: "PUT",
		// 		success: function(data) {
		// 			dialog.close();
		// 			MessageToast.show("Record has been saved");
		// 		},
		// 		error: function(e) {
		// 			dialog.close();
		// 			MessageToast.show("error");
		// 		}
		// 	});
		// 	for (var i = 0; i < 14; i++) {
		// 		selectedRow.getCells()[i].setProperty("editable", false);
		// 		this.getView().byId("idCopy").setVisible(true);
		// 		this.getView().byId("idChange").setVisible(true);
		// 		this.getView().byId("idDownload").setVisible(true);
		// 		this.getView().byId("idDelete").setVisible(true);
		// 		this.getView().byId("idSave").setVisible(false);
		// 		this.getView().byId("idCancel").setVisible(false);
		// 	}
		// }
	});
});